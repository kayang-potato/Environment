#!/bin/zsh

##行编辑高亮模式 {{{
# Ctrl+@ 设置标记，标记和光标点之间为 region
zle_highlight=(region:bg=magenta #选中区域 
               special:bold      #特殊字符
               isearch:underline)#搜索时使用的关键字
#}}}

#杂项 {{{
#允许在交互模式中使用注释  例如：
#cmd #这是注释
setopt INTERACTIVE_COMMENTS      
      
#启用自动 cd，输入目录名回车进入目录
#稍微有点混乱，不如 cd 补全实用
#setopt AUTO_CD
      
      
#禁用 core dumps
limit coredumpsize 0

#以下字符视为单词的一部分
WORDCHARS='*?_-[]~=&;!#$%^(){}<>'
#}}}
    
##for Emacs {{{
#在 Emacs终端 中使用 Zsh 的一些设置 不推荐在 Emacs 中使用它
if [[ "$TERM" == "dumb" ]]; then
setopt No_zle
PROMPT='%n@%M %/
>>'
alias ls='ls -F'
fi  
#}}}


function e2 () {
    local TMP;
    if [[ ("$1" == "-") || ($# -eq 0) ]]; then
        TMP="$(mktemp /tmp/emacsstdinXXX)";

        if [ "$OSTYPE" = "cygwin" ]; then
            TMP="$(cygpath -a -m $TMP)";
        fi

        cat >> "$TMP";
        if ! emacsclient --alternate-editor "vim" --no-wait --eval "(let ((b (create-file-buffer \"*stdin*\"))) (switch-to-buffer b) (insert-file-contents \"${TMP}\") (raise-frame) (delete-file \"${TMP}\"))"  > /dev/null 2>&1; then
            emacs --eval "(let ((b (create-file-buffer \"*stdin*\"))) (switch-to-buffer b) (insert-file-contents \"${TMP}\") (raise-frame) (delete-file \"${TMP}\"))" &
        fi;
    else
        if [ "$OSTYPE" = "cygwin" ]; then
            emacsclient --alternate-editor "vim" --no-wait "$(cygpath -a -w $*)"
        else
            emacsclient --alternate-editor "vim" --no-wait $*
        fi
    fi;
}
